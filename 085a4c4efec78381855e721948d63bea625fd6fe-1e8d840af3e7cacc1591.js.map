{"version":3,"file":"085a4c4efec78381855e721948d63bea625fd6fe-1e8d840af3e7cacc1591.js","mappings":"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","sources":["webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://chatbus_homepage/./node_modules/framer-motion/dist/es/value/types/utils.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.12\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.12 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.12\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","render","useEffect","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","getValueAsType","type","transform","Math","round","numberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","default","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","pipe","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","interpolate","splice","calculatedDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","max","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","clamp","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","min","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","timestamp","stop","now","frameData","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","reverse","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","progress","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","push","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","complex","maxDefaults","applyDefaultFilter","slice","split","number","match","unit","defaultValue","functionRegex","filter","getAnimatableNone","functions","defaultValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","from","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","add","testValueType","dimensionValueTypes","vw","vh","parse","findDimensionValueType","find","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","hasAnimated","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","notify","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","reduce","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","parseFloat","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","template","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","output","to","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","_b","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","clear","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","token","fallback","exec","parseCSSVariable","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","unsubscribe","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","parsed","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","checkStringStartsWith","isCSSVariableName","isCSSVariableToken","cssVariableRegex","addUniqueItem","arr","item","removeItem","index","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","alpha","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","getMixer","mixComplex","mixArray","numValues","blendValue","fromThis","mixObject","originStats","targetStats","numVars","numColors","numNumbers","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","input","isClamp","inputLength","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","combineFunctions","transformers","toFromDifference","SubscriptionManager","subscriptions","numSubscriptions","getSize","velocityPerSecond","frameDuration","MotionValue","init","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","r","parseInt","alpha$1","rgbUnit","clampRgbUnit","isColorString","testProp","splitColor","aName","bName","cName","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","parseComplexValue","createTransformer","convertNumbersToZero","transformer","createUnitType","endsWith","degrees","percent","progressPercentage","sanitize","floatRegex","colorRegex","singleColorRegex","isString"],"sourceRoot":""}